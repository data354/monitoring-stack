apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-conf
  labels:
    chart: "{{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}"
data:
  local-config.yaml: |-
    auth_enabled: false

    server:
      http_listen_port: 3100

    common:
      path_prefix: /loki
      storage:
        filesystem:
          chunks_directory: /loki/chunks
          rules_directory: /loki/rules
      replication_factor: 1
      ring:
        kvstore:
          store: inmemory

    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h

    chunk_store_config:
      chunk_cache_config:
        memcached:
          batch_size: 4096

    ruler:
      alertmanager_url: http://localhost:9093

    ingester:
      chunk_idle_period = "10m" # Période de temps avant que le chunk ne soit considéré comme inactif
      chunk_target_size = "2m" # Taille cible du chunk
      max_chunk_age = "1h" # Durée de vie maximale d'un chunk
      max_transfer_retries = 20 # Nombre maximal de tentatives de transfert d'un chunk

    table_manager:
      retention_deletes_enabled = true # Activer la suppression des données de retention
      retention_period = "336h" # Période de retention des données en heures

    query_log_ingest:
     enabled = true # Activer l'ingestion des journaux de requêtes

    compactor:
      schedule = "0 0 * * *" # Planification de l'opération de compactage (toutes les heures)

    limits_config:
      enforce_metric_name = true # Imposer un nom de métrique valide pour toutes les requêtes
      max_lookback_period = "144h" # Période de recherche maximale en arrière pour les requêtes
      max_query_length = "72h" # Durée maximale d'une requête en heures
      max_query_parallelism = 16 # Nombre maximal de requêtes parallèles
      ingestion_rate_mb = 1024

    analytics:
      reporting_enabled: false

---
apiVersion: v1
kind: Service
metadata:
  name: loki
spec:
  {{ if .Values.loki.nodeport -}}
  type: NodePort
  {{ end -}}
  ports:
    - port: 3100
      targetPort: 3100
      {{ if .Values.loki.nodeport -}}
      nodePort: 30101
      {{ end -}}
      protocol: TCP
      name: http
  selector:
    app: loki
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  labels:
    app: loki
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  selector:
    matchLabels:
      app: loki
  replicas: 1
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
      - name: {{ .Chart.Name }}-loki
        image: grafana/loki
        volumeMounts:
          - name: loki-conf
            mountPath: /etc/loki
            readOnly: true
      volumes:
        - name: loki-conf
          configMap:
            name: loki-conf